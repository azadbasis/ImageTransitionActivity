package com.rider.goldenreign.imagetransitionactivity.adapter;

import android.os.Parcel;
import android.os.Parcelable;

import java.io.File;

/**
 * Created by goldenreign on 4/3/2018.
 */

 public class Image implements Parcelable {

    public final int imageId;
    public final File imageFile;

    /**
     * By default the image is visible but for the purpose of the animation it will be changed to invisible at some time.
     */
    private boolean mImageIsVisible = true;

    public Image(int imageId, File imageFile) {
        this.imageId = imageId;
        this.imageFile = imageFile;
    }

    protected Image(Parcel in) {
        imageId = in.readInt();
        imageFile = (File) in.readSerializable();
        mImageIsVisible = in.readByte() != 0;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (o == null || getClass() != o.getClass()) return false;

        Image image = (Image) o;

        return imageId == image.imageId;
    }

    @Override
    public int hashCode() {
        return imageId;
    }

    /**
     * This is generated by studio
     */
    @Override
    public String toString() {
        return "Image{" +
                "imageId=" + imageId +
                ", imageFile=" + imageFile +
                ", mImageIsVisible=" + mImageIsVisible +
                '}';
    }

    public static final Creator<Image> CREATOR = new Creator<Image>() {
        @Override
        public Image createFromParcel(Parcel in) {
            return new Image(in);
        }

        @Override
        public Image[] newArray(int size) {
            return new Image[size];
        }
    };

    @Override
    public int describeContents() {
        return 0;
    }

    @Override
    public void writeToParcel(Parcel dest, int flags) {
        dest.writeInt(imageId);
        dest.writeSerializable(imageFile);
        dest.writeByte((byte) (mImageIsVisible ? 1 : 0));
    }

    public boolean isVisible() {
        return mImageIsVisible;
    }

    public void setVisibility(boolean isVisible){
        mImageIsVisible = isVisible;
    }
}
